/* Generated By:JavaCC: Do not edit this line. MiniJavaImplConstants.java */
package ch.unibe.iam.scg.javacc;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MiniJavaImplConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LENGTH_FIELD_NAME = 5;
  /** RegularExpression Id. */
  int MAIN_METHOD_NAME = 6;
  /** RegularExpression Id. */
  int PRINT_METHOD = 7;
  /** RegularExpression Id. */
  int UNARY_OPERATOR = 8;
  /** RegularExpression Id. */
  int BINARY_OPERATOR = 9;
  /** RegularExpression Id. */
  int BRACE_LEFT = 10;
  /** RegularExpression Id. */
  int BRACE_RIGHT = 11;
  /** RegularExpression Id. */
  int BRACKET_LEFT = 12;
  /** RegularExpression Id. */
  int BRACKET_RIGHT = 13;
  /** RegularExpression Id. */
  int PARENTHESIS_LEFT = 14;
  /** RegularExpression Id. */
  int PARENTHESIS_RIGHT = 15;
  /** RegularExpression Id. */
  int SEMICOLON = 16;
  /** RegularExpression Id. */
  int COMMA = 17;
  /** RegularExpression Id. */
  int DOT = 18;
  /** RegularExpression Id. */
  int EQUALS_SIGN = 19;
  /** RegularExpression Id. */
  int CLASS = 20;
  /** RegularExpression Id. */
  int PUBLIC_MODIFIER = 21;
  /** RegularExpression Id. */
  int STATIC_MODIFIER = 22;
  /** RegularExpression Id. */
  int EXTENDS = 23;
  /** RegularExpression Id. */
  int RETURN = 24;
  /** RegularExpression Id. */
  int IF = 25;
  /** RegularExpression Id. */
  int ELSE = 26;
  /** RegularExpression Id. */
  int WHILE = 27;
  /** RegularExpression Id. */
  int NEW = 28;
  /** RegularExpression Id. */
  int VOID_TYPE = 29;
  /** RegularExpression Id. */
  int STRING_TYPE = 30;
  /** RegularExpression Id. */
  int INT_TYPE = 31;
  /** RegularExpression Id. */
  int BOOLEAN_TYPE = 32;
  /** RegularExpression Id. */
  int THIS = 33;
  /** RegularExpression Id. */
  int TRUE = 34;
  /** RegularExpression Id. */
  int FALSE = 35;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 36;
  /** RegularExpression Id. */
  int IDENTIFIER = 37;
  /** RegularExpression Id. */
  int LETTER = 38;
  /** RegularExpression Id. */
  int DIGIT = 39;
  /** RegularExpression Id. */
  int UNDERSCORE = 40;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"length\"",
    "\"main\"",
    "\"System.out.println\"",
    "\"!\"",
    "<BINARY_OPERATOR>",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"(\"",
    "\")\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"=\"",
    "\"class\"",
    "\"public\"",
    "\"static\"",
    "\"extends\"",
    "\"return\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"new\"",
    "\"void\"",
    "\"String\"",
    "\"int\"",
    "\"boolean\"",
    "\"this\"",
    "\"true\"",
    "\"false\"",
    "<INTEGER_LITERAL>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "\"_\"",
  };

}
