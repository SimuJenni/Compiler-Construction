/**
 * JavaCC template file created by SF JavaCC plugin 1.5.17+ wizard for JavaCC 1.5.0+
 */options{  JDK_VERSION = "1.5";  static = false;}PARSER_BEGIN(MiniJavaImpl)package ch.unibe.iam.scg.javacc;import ch.unibe.iam.scg.minijava.MiniJava;public class MiniJavaImpl implements MiniJava{}PARSER_END(MiniJavaImpl)SKIP :{  " "| "\r"| "\t"| "\n"}TOKEN :{  < INTEGER_LITERAL : ([ "1"-"9" ]) ([ "0"-"9" ])+ >| < IDENTIFIER : ([ "A"-"Z", "a"-"z" ])+ >}void Goal() :{}{  MainClass()  (    ClassDeclaration()  )*  < EOF >}void MainClass() :{}{  "class" Identifier() "{" "public" "static" "void" "main" "(" "String" "[" "]" Identifier() ")" "{" Statement() "}" "}"}void ClassDeclaration() :{}{  "class" Identifier()  (    "extends" Identifier()  )?  "{"  (    VarDeclaration()  )*  (    MethodDeclaration()  )*  "}"}void VarDeclaration() :{}{  Type() Identifier() ";"}void MethodDeclaration() :{}{  "public" Type() Identifier() "("  (    Type() Identifier()    (      "," Type() Identifier()    )*  )?  ")" "{"  (    VarDeclaration()  )*  (    Statement()  )*  "return" Expression() ";" "}"}void Type() :{}{  "int" "[" "]"| "boolean"| "int"| Identifier()}void Statement() :{}{  "{"  (    Statement()  )*  "}"| "if" "(" Expression() ")" Statement() "else" Statement()| "while" "(" Expression() ")" Statement()| "System.out.println" "(" Expression() ")" ";"| Identifier() "=" Expression() ";"| Identifier() "[" Expression() "]" "=" Expression() ";"}void Expression() :{}{  Expression()  (    "&&"  | "<"  | "+"  | "-"  | "*"  )  Expression()| Expression() "[" Expression() "]"| Expression() "." "length"| Expression() "." Identifier() "("  (    Expression()    (      "," Expression()    )*  )?  ")"| < INTEGER_LITERAL >| "true"| "false"| Identifier()| "this"| "new" "int" "[" Expression() "]"| "new" Identifier() "(" ")"| "!" Expression()| "(" Expression() ")"}void Identifier() :{}{  < IDENTIFIER >}
